{"ast":null,"code":"var _jsxFileName = \"/Users/10001oleg/todo-ui/src/pages/TodoItem/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, DatePicker, Row, Col, Card, Select } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\"; // Instruments\n\nimport { api } from '../../api';\nimport { routes } from '../../navigation/routes';\nimport { history } from '../../navigation/history'; //Styles\n\nimport style from '../../pages/style';\nconst {\n  layout,\n  tailLayout\n} = style;\nexport const TodoItem = ({\n  token\n}) => {\n  const {\n    id: todoId\n  } = useParams();\n  const [todo, setTodo] = useState({});\n\n  const onFinish = async values => {\n    try {\n      await api.updateTodo(todoId, token, values);\n      history.push(routes.todo);\n    } catch ({\n      message\n    }) {\n      console.error(message);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const remove = async () => {\n    try {\n      await api.removeTodo(todoId, token);\n      history.push(routes.todo);\n    } catch ({\n      message\n    }) {\n      console.error(message);\n    }\n  };\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const data = await api.readTodos(token);\n        const sourceTodo = data.find(({\n          id\n        }) => id === todoId);\n        console.log('---sourceTodo', sourceTodo);\n        setTodo({ ...sourceTodo,\n          dd: moment(sourceTodo.dd)\n        });\n      } catch ({\n        message\n      }) {\n        console.log(message);\n      }\n    };\n\n    if (!token) {\n      history.push(routes.signIn);\n    } else {\n      loadTodos();\n    }\n  }, [todoId, token]);\n  return todo.id ? React.createElement(Row, {\n    style: {\n      marginTop: \"10vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 12,\n    offset: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Card, {\n    title: \"Edit Task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: todo,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: \"Please input your name!\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Description\",\n    name: \"description\",\n    rules: [{\n      required: true,\n      message: \"Please input your description!\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Select\",\n    name: \"status\",\n    rules: [{\n      required: true,\n      message: \"Please input your description!\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Select.Option, {\n    value: \"new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"New\"), React.createElement(Select.Option, {\n    value: \"completed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Completed\"))), React.createElement(Form.Item, {\n    label: \"Due date\",\n    name: \"dd\",\n    rules: [{\n      required: true,\n      message: \"Please input your due date!\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Save and Back\"), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"button\",\n    danger: true,\n    onClick: remove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Delete\")))))) : null;\n};","map":{"version":3,"sources":["/Users/10001oleg/todo-ui/src/pages/TodoItem/index.js"],"names":["React","useState","useEffect","Form","Input","Button","DatePicker","Row","Col","Card","Select","useParams","moment","api","routes","history","style","layout","tailLayout","TodoItem","token","id","todoId","todo","setTodo","onFinish","values","updateTodo","push","message","console","error","onFinishFailed","errorInfo","log","remove","removeTodo","loadTodos","data","readTodos","sourceTodo","find","dd","signIn","marginTop","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, DatePicker, Row, Col, Card, Select } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\n\n// Instruments\nimport { api } from '../../api';\n\nimport { routes } from '../../navigation/routes';\nimport { history } from '../../navigation/history';\n\n//Styles\nimport style from '../../pages/style';\nconst { layout, tailLayout } = style;\n\nexport const TodoItem = ({ token }) => {\n    const { id: todoId } = useParams();\n    const [todo, setTodo] = useState({});\n\n    const onFinish = async (values) => {\n        try {\n            await api.updateTodo(todoId, token, values);\n            history.push(routes.todo);\n        } catch ({ message }) {\n            console.error(message);\n        }\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };    \n    \n    const remove = async () => {\n        try {\n          await api.removeTodo(todoId, token);\n          history.push(routes.todo);\n        } catch ({ message }) {\n          console.error(message);\n        }\n    };\n\n    useEffect(() => {\n        const loadTodos = async () => {\n            try {\n                const data = await api.readTodos(token);\n                const sourceTodo = data.find(({ id }) => id === todoId);\n                console.log('---sourceTodo', sourceTodo);\n\n                setTodo({ ...sourceTodo, dd: moment(sourceTodo.dd) });\n            } catch ({ message }) {\n                console.log(message);\n            }\n        };\n\n        if (!token) {\n            history.push(routes.signIn);\n        } else {\n            loadTodos();\n        }\n    }, [todoId, token]);\n\n  return todo.id ? (\n    <Row style={{ marginTop: \"10vh\" }}>\n      <Col span={12} offset={6}>\n        <Card title=\"Edit Task\">\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={todo}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Name\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your name!\"\n                }\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"Description\"\n              name=\"description\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your description!\"\n                }\n              ]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item \n              label=\"Select\"\n              name=\"status\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your description!\"\n                }\n              ]}\n            >\n              <Select>\n                <Select.Option value=\"new\">New</Select.Option>\n                <Select.Option value=\"completed\">Completed</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              label=\"Due date\"\n              name=\"dd\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your due date!\"\n                }\n              ]}\n            >\n              <DatePicker />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Save and Back\n              </Button>\n              <Button type=\"primary\" htmlType=\"button\" danger onClick = { remove }>\n                Delete\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n      </Col>\n    </Row>\n  ) : null;\n};\n"]},"metadata":{},"sourceType":"module"}