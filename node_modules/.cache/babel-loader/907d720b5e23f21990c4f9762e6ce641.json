{"ast":null,"code":"var _jsxFileName = \"/Users/10001oleg/todo-ui/src/pages/Todos/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List, Form, Input, Button, DatePicker, Row, Col, Card, Checkbox } from 'antd';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment'; // Instruments\n\nimport { api } from '../../api';\nimport { routes } from '../../navigation/routes';\nimport { history } from '../../navigation/history'; //Styles\n\nimport style from '../../pages/style';\nconst {\n  layout,\n  tailLayout\n} = style;\nexport const Todos = ({\n  token\n}) => {\n  const [todos, setTodos] = useState([]);\n\n  const onFinish = async values => {\n    try {\n      const todo = await api.createTodo(token, values);\n      setTodos(todos => [todo, ...todos]);\n    } catch ({\n      message\n    }) {\n      console.error(message);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    history.push(routes.signIn);\n  };\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const data = await api.readTodos(token);\n        setTodos(data);\n        console.log('---data', data);\n      } catch ({\n        message\n      }) {\n        console.log(message);\n      }\n    };\n\n    if (!token) {\n      history.push(routes.signIn);\n    } else {\n      loadTodos();\n    }\n  }, [token]);\n  return React.createElement(React.Fragment, null, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Col, {\n    style: {\n      marginTop: '15px'\n    },\n    span: 4,\n    offset: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Logout\"))), React.createElement(Row, {\n    style: {\n      marginTop: '15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 18,\n    offset: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Card, {\n    title: \"Todo List\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: 'Please input your name!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Description\",\n    name: \"description\",\n    rules: [{\n      required: true,\n      message: 'Please input your description!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Due date\",\n    name: \"dd\",\n    rules: [{\n      required: true,\n      message: 'Please input your due date!'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Create Todo\"))), React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: todos,\n    renderItem: ({\n      id,\n      name,\n      description,\n      dd,\n      status\n    }) => React.createElement(Link, {\n      to: `/${id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, 'Completed: ', React.createElement(Checkbox, {\n      style: {\n        marginRight: '5px'\n      },\n      onChange: () => {},\n      checked: status === 'completed',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(List.Item.Meta, {\n      description: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(List.Item.Meta, {\n      description: description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(List.Item.Meta, {\n      description: moment(dd).format('LLLL'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })))));\n};","map":{"version":3,"sources":["/Users/10001oleg/todo-ui/src/pages/Todos/index.js"],"names":["React","useState","useEffect","List","Form","Input","Button","DatePicker","Row","Col","Card","Checkbox","Link","moment","api","routes","history","style","layout","tailLayout","Todos","token","todos","setTodos","onFinish","values","todo","createTodo","message","console","error","onFinishFailed","errorInfo","log","logout","localStorage","removeItem","push","signIn","loadTodos","data","readTodos","marginTop","remember","required","id","name","description","dd","status","marginRight","format"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    List,\n    Form,\n    Input,\n    Button,\n    DatePicker,\n    Row,\n    Col,\n    Card,\n    Checkbox,\n} from 'antd';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\n// Instruments\nimport { api } from '../../api';\n\nimport { routes } from '../../navigation/routes';\nimport { history } from '../../navigation/history';\n\n//Styles\nimport style from '../../pages/style';\nconst { layout, tailLayout } = style;\n\nexport const Todos = ({ token }) => {\n    const [todos, setTodos] = useState([]);\n\n    const onFinish = async (values) => {\n        try {\n            const todo = await api.createTodo(token, values);\n            setTodos((todos) => [todo, ...todos]);\n        } catch ({ message }) {\n            console.error(message);\n        }\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        history.push(routes.signIn);\n    };\n\n    useEffect(() => {\n        const loadTodos = async () => {\n            try {\n                const data = await api.readTodos(token);\n                setTodos(data);\n                console.log('---data', data);\n            } catch ({ message }) {\n                console.log(message);\n            }\n        };\n\n        if (!token) {\n            history.push(routes.signIn);\n        } else {\n            loadTodos();\n        }\n    }, [token]);\n\n    return (\n        <>\n            <Row>\n                <Col style={{ marginTop: '15px' }} span={4} offset={20}>\n                    <Button onClick={logout}>Logout</Button>\n                </Col>\n            </Row>\n            <Row style={{ marginTop: '15px' }}>\n                <Col span={18} offset={3}>\n                    <Card title=\"Todo List\">\n                        <Form\n                            {...layout}\n                            name=\"basic\"\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}\n                        >\n                            <Form.Item\n                                label=\"Name\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your name!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Description\"\n                                name=\"description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message:\n                                            'Please input your description!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Due date\"\n                                name=\"dd\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your due date!',\n                                    },\n                                ]}\n                            >\n                                <DatePicker />\n                            </Form.Item>\n                            <Form.Item {...tailLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\">\n                                    Create Todo\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                        <List\n                            itemLayout=\"horizontal\"\n                            dataSource={todos}\n                            renderItem={({\n                                id,\n                                name,\n                                description,\n                                dd,\n                                status,\n                            }) => (\n                                <Link to={`/${id}`}>\n                                    <List.Item>\n                                        {'Completed: '}\n                                        <Checkbox\n                                            style={{ marginRight: '5px' }}\n                                            onChange={() => {}}\n                                            checked={status === 'completed'}\n                                        />\n                                        <List.Item.Meta\n                                            description={name}\n                                        />\n                                        <List.Item.Meta\n                                            description={description}\n                                        />\n                                        <List.Item.Meta\n                                            description={moment(dd).format(\n                                                'LLLL',\n                                            )}\n                                        />\n                                    </List.Item>\n                                </Link>\n                            )}\n                        />\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}