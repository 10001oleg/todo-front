{"ast":null,"code":"var _jsxFileName = \"/Users/10001oleg/todo-ui/src/navigation/index.js\";\n// Core\nimport React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; // Routes\n\nimport { routes } from './routes'; // Components\n\nimport { SignUp, SignIn, Todos, TodoItem } from '../pages';\nexport const Routes = () => {\n  const [token, setToken] = useState('');\n  return React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: routes.signIn,\n    component: () => React.createElement(SignIn, {\n      setToken: setToken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: routes.signUp,\n    component: SignUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), token && React.createElement(Route, {\n    exact: true,\n    path: routes.todo,\n    component: () => React.createElement(Todos, {\n      token: token,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), token && React.createElement(Route, {\n    exact: true,\n    path: routes.todoItem,\n    component: () => React.createElement(TodoItem, {\n      token: token,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: routes.signIn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/10001oleg/todo-ui/src/navigation/index.js"],"names":["React","useState","Switch","Route","Redirect","routes","SignUp","SignIn","Todos","TodoItem","Routes","token","setToken","signIn","signUp","todo","todoItem"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CAEA;;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,QAAhC,QAAgD,UAAhD;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAEI,MAAM,CAACQ,MAFjB;AAGI,IAAA,SAAS,EAAE,MAAM,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAED,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAEP,MAAM,CAACS,MAA1B;AAAkC,IAAA,SAAS,EAAER,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOMK,KAAK,IAAI,oBAAC,KAAD;AACP,IAAA,KAAK,MADE;AAEP,IAAA,IAAI,EAAEN,MAAM,CAACU,IAFN;AAGP,IAAA,SAAS,EAAE,MAAM,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPf,EAYMA,KAAK,IAAI,oBAAC,KAAD;AACP,IAAA,KAAK,MADE;AAEP,IAAA,IAAI,EAAEN,MAAM,CAACW,QAFN;AAGP,IAAA,SAAS,EAAE,MAAM,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZf,EAiBI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEN,MAAM,CAACQ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADJ;AAqBH,CAxBM","sourcesContent":["// Core\nimport React, { useState } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\n// Routes\nimport { routes } from './routes';\n\n// Components\nimport { SignUp, SignIn, Todos, TodoItem } from '../pages';\n\nexport const Routes = () => {\n    const [token, setToken] = useState('');\n\n    return (\n        <Switch>\n            <Route\n                exact\n                path={routes.signIn}\n                component={() => <SignIn setToken={setToken} />}\n            />\n            <Route exact path={routes.signUp} component={SignUp} />\n            { token && <Route\n                exact\n                path={routes.todo}\n                component={() => <Todos token={token} />}\n            /> }\n            { token && <Route\n                exact\n                path={routes.todoItem}\n                component={() => <TodoItem token={token} />}\n            /> }\n            <Redirect to={routes.signIn} />\n        </Switch>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}