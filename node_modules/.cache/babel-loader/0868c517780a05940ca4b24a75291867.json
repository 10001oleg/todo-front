{"ast":null,"code":"var _jsxFileName = \"/Users/10001oleg/todo-ui/src/pages/TodoItem/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, DatePicker } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\"; // Instruments\n\nimport { api } from \"../../api\";\nimport { routes } from \"../../navigation/routes\";\nimport { history } from \"../../navigation/history\"; //Styles\n\nimport style from \"../../pages/style\";\nconst {\n  layout,\n  tailLayout\n} = style;\nexport const TodoItem = ({\n  token,\n  idProps,\n  todos\n}) => {\n  const {\n    id: todoId\n  } = useParams();\n  const [todo, setTodo] = useState({});\n\n  const onFinish = async values => {\n    try {\n      await api.updateTodo(todoId, token, values);\n      history.push(routes.todo);\n    } catch ({\n      message\n    }) {\n      console.error(message);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const data = await api.readTodos(token);\n        const sourceTodo = data.find(({\n          id\n        }) => id === todoId);\n        console.log(\"---sourceTodo\", sourceTodo);\n        setTodo({ ...sourceTodo,\n          dd: moment(sourceTodo.dd)\n        });\n      } catch ({\n        message\n      }) {\n        console.log(message);\n      }\n    };\n\n    if (!token) {\n      history.push(routes.signIn);\n    } else {\n      loadTodos();\n    }\n  }, [todoId, token]);\n  return todo.id ? React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: todo,\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: \"Please input your name!\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Description\",\n    name: \"description\",\n    rules: [{\n      required: true,\n      message: \"Please input your description!\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Status\",\n    name: \"status\",\n    rules: [{\n      required: true,\n      message: \"Please input your description!\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    label: \"Due date\",\n    name: \"dd\",\n    rules: [{\n      required: true,\n      message: \"Please input your due date!\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Update Todo\"))) : null;\n};","map":{"version":3,"sources":["/Users/10001oleg/todo-ui/src/pages/TodoItem/index.js"],"names":["React","useState","useEffect","Form","Input","Button","DatePicker","useParams","moment","api","routes","history","style","layout","tailLayout","TodoItem","token","idProps","todos","id","todoId","todo","setTodo","onFinish","values","updateTodo","push","message","console","error","onFinishFailed","errorInfo","log","loadTodos","data","readTodos","sourceTodo","find","dd","signIn","required"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, DatePicker } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\n\n// Instruments\nimport { api } from \"../../api\";\n\nimport { routes } from \"../../navigation/routes\";\nimport { history } from \"../../navigation/history\";\n\n//Styles\nimport style from \"../../pages/style\";\nconst { layout, tailLayout } = style;\n\nexport const TodoItem = ({ token, idProps, todos }) => {\n  const { id: todoId } = useParams();\n  const [todo, setTodo] = useState({});\n\n  const onFinish = async values => {\n    try {\n      await api.updateTodo(todoId, token, values);\n      history.push(routes.todo);\n    } catch ({ message }) {\n      console.error(message);\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const data = await api.readTodos(token);\n        const sourceTodo = data.find(({ id }) => id === todoId);\n        console.log(\"---sourceTodo\", sourceTodo);\n\n        setTodo({ ...sourceTodo, dd: moment(sourceTodo.dd) });\n      } catch ({ message }) {\n        console.log(message);\n      }\n    };\n\n    if (!token) {\n      history.push(routes.signIn);\n    } else {\n      loadTodos();\n    }\n  }, [todoId, token]);\n\n  return todo.id ? (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={todo}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your name!\"\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Description\"\n        name=\"description\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your description!\"\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Status\"\n        name=\"status\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your description!\"\n          }\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Due date\"\n        name=\"dd\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your due date!\"\n          }\n        ]}\n      >\n        <DatePicker />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Update Todo\n        </Button>\n      </Form.Item>\n    </Form>\n  ) : null;\n};\n"]},"metadata":{},"sourceType":"module"}